// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegonSearchApi.Data;

namespace RegonSearchApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190814092227_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegonSearchApi.Data.Model.CityTbl", b =>
                {
                    b.Property<Guid>("CityID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityName");

                    b.Property<string>("PostalCode");

                    b.Property<Guid>("VoivodeshipID");

                    b.HasKey("CityID");

                    b.HasIndex("VoivodeshipID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("RegonSearchApi.Data.Model.CompanyDetailTbl", b =>
                {
                    b.Property<Guid>("CompanyDetailID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<Guid>("CityID");

                    b.Property<Guid>("CompanyID");

                    b.HasKey("CompanyDetailID");

                    b.HasIndex("CityID");

                    b.HasIndex("CompanyID");

                    b.ToTable("CompanyDetails");
                });

            modelBuilder.Entity("RegonSearchApi.Data.Model.CompanyTbl", b =>
                {
                    b.Property<Guid>("CompanyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName");

                    b.Property<string>("KRS");

                    b.Property<string>("NIP");

                    b.Property<string>("REGON");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("RegonSearchApi.Data.Model.VoivodeshipTbl", b =>
                {
                    b.Property<Guid>("VoivodeshipID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NameVoivodeship");

                    b.HasKey("VoivodeshipID");

                    b.ToTable("Voivodeships");
                });

            modelBuilder.Entity("RegonSearchApi.Data.Model.CityTbl", b =>
                {
                    b.HasOne("RegonSearchApi.Data.Model.VoivodeshipTbl", "Voivodeship")
                        .WithMany("CitiesList")
                        .HasForeignKey("VoivodeshipID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RegonSearchApi.Data.Model.CompanyDetailTbl", b =>
                {
                    b.HasOne("RegonSearchApi.Data.Model.CityTbl", "City")
                        .WithMany("CompanyDetailsList")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RegonSearchApi.Data.Model.CompanyTbl", "Company")
                        .WithMany("CompanyDetail")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
